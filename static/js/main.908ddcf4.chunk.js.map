{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputString","setInputString","totalDaysTillNow","setTotalDaysTillNow","hours","setHours","minutes","setMinutes","laggingHours","setLaggingHours","laggingMinutes","setLaggingMinutes","isAhead","setIsAhead","height","setHeight","width","setWidth","useEffect","updateDimensions","window","addEventListener","removeEventListener","innerHeight","innerWidth","style","display","flexDirection","justifyContent","alignItems","Paper","elevation","className","type","name","value","onChange","e","target","rows","onClick","arr","replaceAll","split","hoursLagging","minutesLagging","forEach","el","tempString","Math","floor","totalExpectedHours","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.908ddcf4.chunk.js","sourcesContent":["import { Paper } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Confetti from \"react-confetti\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [inputString, setInputString] = useState(\"\");\r\n  const [totalDaysTillNow, setTotalDaysTillNow] = useState();\r\n  const [hours, setHours] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [laggingHours, setLaggingHours] = useState(0);\r\n  const [laggingMinutes, setLaggingMinutes] = useState(0);\r\n  const [isAhead, setIsAhead] = useState(true);\r\n  const [height, setHeight] = useState(0);\r\n  const [width, setWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateDimensions);\r\n    };\r\n  }, []);\r\n\r\n  const updateDimensions = () => {\r\n    setHeight(window.innerHeight);\r\n    setWidth(window.innerWidth);\r\n  };\r\n\r\n  const calculateHandler = () => {\r\n    if (!inputString || !totalDaysTillNow) {\r\n      alert(\"Provide all inputs\");\r\n      return;\r\n    }\r\n    let arr = inputString.replaceAll(\" \", \"\").replaceAll(\"\\t\", \"\").split(\"min\");\r\n    let hours = 0;\r\n    let minutes = 0;\r\n    let hoursLagging = 0;\r\n    let minutesLagging = 0;\r\n\r\n    arr.forEach((el) => {\r\n      let tempString = el.split(\"hrs,\");\r\n      hours += +tempString[0];\r\n      if (tempString[1]) minutes += +tempString[1];\r\n    });\r\n\r\n    hours += Math.floor(minutes / 60);\r\n    minutes = minutes % 60;\r\n\r\n    setHours(hours);\r\n    setMinutes(minutes);\r\n    let totalExpectedHours = totalDaysTillNow * 8;\r\n    if (hours >= totalExpectedHours) {\r\n      hoursLagging = hours - totalExpectedHours;\r\n      minutesLagging = minutes;\r\n      setIsAhead(true);\r\n    } else {\r\n      hoursLagging = totalExpectedHours - hours - 1;\r\n      minutesLagging = 60 - minutes;\r\n      setIsAhead(false);\r\n    }\r\n\r\n    setLaggingHours(hoursLagging);\r\n    setLaggingMinutes(minutesLagging);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAhead ? <Confetti width={width} height={height} /> : null}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Paper elevation={3} className=\"my-container\">\r\n          <h1>Welcome to cis hours calculator...</h1>\r\n          <div className=\"my-form\">\r\n            <div className=\"my-form-group\">\r\n              <label className=\"my-input-label\">Paste here</label>\r\n              <textarea\r\n                className=\"my-input\"\r\n                type=\"text\"\r\n                name=\"inputString\"\r\n                value={inputString}\r\n                onChange={(e) => setInputString(e.target.value)}\r\n                rows=\"5\"\r\n                width=\"80%\"\r\n              />\r\n            </div>\r\n            <div className=\"my-form-group\">\r\n              <label className=\"my-input-label\">Total Working Days</label>\r\n              <input\r\n                className=\"my-input\"\r\n                type=\"text\"\r\n                name=\"totalDaysTillNow\"\r\n                value={totalDaysTillNow}\r\n                onChange={(e) => setTotalDaysTillNow(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"my-form-actions\">\r\n              <button className=\"my-submit-btn\" onClick={calculateHandler}>\r\n                Calculate\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <p>\r\n              Total hours till yesterday: {hours} Hrs : {minutes} mins\r\n            </p>\r\n            <p>\r\n              Lagging/Ahead By:{\" \"}\r\n              <span className={isAhead ? \"ahead\" : \"lagging\"}>\r\n                {laggingHours} Hrs : {laggingMinutes} mins\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}